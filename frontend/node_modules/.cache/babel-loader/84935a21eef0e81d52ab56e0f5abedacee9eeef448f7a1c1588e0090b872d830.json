{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tumba\\\\OneDrive\\\\Desktop\\\\React Class\\\\Zomato Lite\\\\ZomatoLite\\\\frontend\\\\src\\\\RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport HeroSection from './HeroSection';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './RestaurantList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchRestaurants = async (searchTerm = '') => {\n    try {\n      const response = await axios.get(`http://localhost:5008/restaurants?search=${searchTerm}&page=1`);\n      if (response.data && Array.isArray(response.data.restaurants)) {\n        setRestaurants(response.data.restaurants);\n      } else if (Array.isArray(response.data)) {\n        setRestaurants(response.data);\n      } else {\n        setError('Unexpected response structure');\n      }\n    } catch (error) {\n      setError('Error fetching data');\n    }\n  };\n  useEffect(() => {\n    fetchRestaurants();\n  }, []);\n  const handleSearch = searchTerm => {\n    fetchRestaurants(searchTerm);\n  };\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000\n  };\n\n  // Define color classes based on the rating text\n  const getColorClass = ratingText => {\n    switch (ratingText) {\n      case 'Excellent':\n        return 'green-dark';\n      case 'Very Good':\n        return 'green';\n      case 'Good':\n        return 'yellow';\n      case 'Average':\n        return 'orange';\n      case 'Not Rated':\n      default:\n        return 'white';\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeroSection, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-list\",\n      children: restaurants.length > 0 ? /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings,\n        children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `restaurant-card ${getColorClass(restaurant.rating_text)}`,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/restaurant/${restaurant.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: restaurant.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"restaurant-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Rating: \", restaurant.aggregate_rating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Cuisines: \", restaurant.cuisines]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)\n        }, restaurant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(RestaurantList, \"illJSX/DPVGjuGa1MaZ7FUGpIlE=\");\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","Slider","HeroSection","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","error","setError","fetchRestaurants","searchTerm","response","get","data","Array","isArray","handleSearch","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","getColorClass","ratingText","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","className","length","map","restaurant","rating_text","to","id","name","aggregate_rating","cuisines","_c","$RefreshReg$"],"sources":["C:/Users/tumba/OneDrive/Desktop/React Class/Zomato Lite/ZomatoLite/frontend/src/RestaurantList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport HeroSection from './HeroSection';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './RestaurantList.css';\r\n\r\nconst RestaurantList = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchRestaurants = async (searchTerm = '') => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5008/restaurants?search=${searchTerm}&page=1`);\r\n            if (response.data && Array.isArray(response.data.restaurants)) {\r\n                setRestaurants(response.data.restaurants);\r\n            } else if (Array.isArray(response.data)) {\r\n                setRestaurants(response.data);\r\n            } else {\r\n                setError('Unexpected response structure');\r\n            }\r\n        } catch (error) {\r\n            setError('Error fetching data');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchRestaurants();\r\n    }, []);\r\n\r\n    const handleSearch = (searchTerm) => {\r\n        fetchRestaurants(searchTerm);\r\n    };\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 3000,\r\n    };\r\n\r\n    // Define color classes based on the rating text\r\n    const getColorClass = (ratingText) => {\r\n        switch (ratingText) {\r\n            case 'Excellent':\r\n                return 'green-dark';\r\n            case 'Very Good':\r\n                return 'green';\r\n            case 'Good':\r\n                return 'yellow';\r\n            case 'Average':\r\n                return 'orange';\r\n            case 'Not Rated':\r\n            default:\r\n                return 'white';\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <HeroSection onSearch={handleSearch} />\r\n            <div className=\"restaurant-list\">\r\n                {restaurants.length > 0 ? (\r\n                    <Slider {...settings}>\r\n                        {restaurants.map((restaurant) => (\r\n                            <div \r\n                                className={`restaurant-card ${getColorClass(restaurant.rating_text)}`} \r\n                                key={restaurant.id}\r\n                            >\r\n                                <Link to={`/restaurant/${restaurant.id}`}>\r\n                                    <h1>{restaurant.name}</h1>\r\n                                    <div className=\"restaurant-info\">\r\n                                        <h2>Rating: {restaurant.aggregate_rating}</h2>\r\n                                        <h3>Cuisines: {restaurant.cuisines}</h3>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n                ) : (\r\n                    <p>No restaurants found</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}